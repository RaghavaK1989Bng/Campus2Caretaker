#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessObject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_9CBDC5_campus2caretaker")]
	public partial class Campus2CaretakerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblSuperAdminLogin(tblSuperAdminLogin instance);
    partial void UpdatetblSuperAdminLogin(tblSuperAdminLogin instance);
    partial void DeletetblSuperAdminLogin(tblSuperAdminLogin instance);
    partial void InserttblInstituteLogin(tblInstituteLogin instance);
    partial void UpdatetblInstituteLogin(tblInstituteLogin instance);
    partial void DeletetblInstituteLogin(tblInstituteLogin instance);
    partial void InserttblInstituteDetail(tblInstituteDetail instance);
    partial void UpdatetblInstituteDetail(tblInstituteDetail instance);
    partial void DeletetblInstituteDetail(tblInstituteDetail instance);
    partial void InserttblBranchDetail(tblBranchDetail instance);
    partial void UpdatetblBranchDetail(tblBranchDetail instance);
    partial void DeletetblBranchDetail(tblBranchDetail instance);
    partial void InserttblSubjectDetail(tblSubjectDetail instance);
    partial void UpdatetblSubjectDetail(tblSubjectDetail instance);
    partial void DeletetblSubjectDetail(tblSubjectDetail instance);
    partial void InserttblStudentDetail(tblStudentDetail instance);
    partial void UpdatetblStudentDetail(tblStudentDetail instance);
    partial void DeletetblStudentDetail(tblStudentDetail instance);
    partial void InserttblInternalMark(tblInternalMark instance);
    partial void UpdatetblInternalMark(tblInternalMark instance);
    partial void DeletetblInternalMark(tblInternalMark instance);
    partial void InserttblAttendanceDetail(tblAttendanceDetail instance);
    partial void UpdatetblAttendanceDetail(tblAttendanceDetail instance);
    partial void DeletetblAttendanceDetail(tblAttendanceDetail instance);
    #endregion
		
		public Campus2CaretakerDataContext() : 
				base(global::DataAccessObject.Properties.Settings.Default.DB_9CBDC5_campus2caretakerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Campus2CaretakerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Campus2CaretakerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Campus2CaretakerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Campus2CaretakerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblSuperAdminLogin> tblSuperAdminLogins
		{
			get
			{
				return this.GetTable<tblSuperAdminLogin>();
			}
		}
		
		public System.Data.Linq.Table<tblInstituteLogin> tblInstituteLogins
		{
			get
			{
				return this.GetTable<tblInstituteLogin>();
			}
		}
		
		public System.Data.Linq.Table<tblInstituteDetail> tblInstituteDetails
		{
			get
			{
				return this.GetTable<tblInstituteDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblBranchDetail> tblBranchDetails
		{
			get
			{
				return this.GetTable<tblBranchDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblSubjectDetail> tblSubjectDetails
		{
			get
			{
				return this.GetTable<tblSubjectDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblStudentDetail> tblStudentDetails
		{
			get
			{
				return this.GetTable<tblStudentDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblInternalMark> tblInternalMarks
		{
			get
			{
				return this.GetTable<tblInternalMark>();
			}
		}
		
		public System.Data.Linq.Table<tblAttendanceDetail> tblAttendanceDetails
		{
			get
			{
				return this.GetTable<tblAttendanceDetail>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInstituteDetails")]
		public ISingleResult<GetInstituteDetailsResult> GetInstituteDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> instituteid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteid);
			return ((ISingleResult<GetInstituteDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentDetails")]
		public ISingleResult<GetStudentDetailsResult> GetStudentDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentid);
			return ((ISingleResult<GetStudentDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentsInternalsDetails")]
		public ISingleResult<GetStudentsInternalsDetailsResult> GetStudentsInternalsDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> instituteid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteid);
			return ((ISingleResult<GetStudentsInternalsDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentsAttendanceDetails")]
		public ISingleResult<GetStudentsAttendanceDetailsResult> GetStudentsAttendanceDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> instituteid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), instituteid);
			return ((ISingleResult<GetStudentsAttendanceDetailsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSuperAdminLogin")]
	public partial class tblSuperAdminLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _colUsername;
		
		private string _colPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolUsernameChanging(string value);
    partial void OncolUsernameChanged();
    partial void OncolPasswordChanging(string value);
    partial void OncolPasswordChanged();
    #endregion
		
		public tblSuperAdminLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string colUsername
		{
			get
			{
				return this._colUsername;
			}
			set
			{
				if ((this._colUsername != value))
				{
					this.OncolUsernameChanging(value);
					this.SendPropertyChanging();
					this._colUsername = value;
					this.SendPropertyChanged("colUsername");
					this.OncolUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPassword", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string colPassword
		{
			get
			{
				return this._colPassword;
			}
			set
			{
				if ((this._colPassword != value))
				{
					this.OncolPasswordChanging(value);
					this.SendPropertyChanging();
					this._colPassword = value;
					this.SendPropertyChanged("colPassword");
					this.OncolPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInstituteLogin")]
	public partial class tblInstituteLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _colUsername;
		
		private string _colPassword;
		
		private string _colUserType;
		
		private int _colInstituteId;
		
		private EntityRef<tblInstituteDetail> _tblInstituteDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolUsernameChanging(string value);
    partial void OncolUsernameChanged();
    partial void OncolPasswordChanging(string value);
    partial void OncolPasswordChanged();
    partial void OncolUserTypeChanging(string value);
    partial void OncolUserTypeChanged();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    #endregion
		
		public tblInstituteLogin()
		{
			this._tblInstituteDetail = default(EntityRef<tblInstituteDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string colUsername
		{
			get
			{
				return this._colUsername;
			}
			set
			{
				if ((this._colUsername != value))
				{
					this.OncolUsernameChanging(value);
					this.SendPropertyChanging();
					this._colUsername = value;
					this.SendPropertyChanged("colUsername");
					this.OncolUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPassword", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string colPassword
		{
			get
			{
				return this._colPassword;
			}
			set
			{
				if ((this._colPassword != value))
				{
					this.OncolPasswordChanging(value);
					this.SendPropertyChanging();
					this._colPassword = value;
					this.SendPropertyChanged("colPassword");
					this.OncolPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colUserType", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string colUserType
		{
			get
			{
				return this._colUserType;
			}
			set
			{
				if ((this._colUserType != value))
				{
					this.OncolUserTypeChanging(value);
					this.SendPropertyChanging();
					this._colUserType = value;
					this.SendPropertyChanged("colUserType");
					this.OncolUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					if (this._tblInstituteDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblInstituteLogin", Storage="_tblInstituteDetail", ThisKey="colInstituteId", OtherKey="colInstituteId", IsForeignKey=true)]
		public tblInstituteDetail tblInstituteDetail
		{
			get
			{
				return this._tblInstituteDetail.Entity;
			}
			set
			{
				tblInstituteDetail previousValue = this._tblInstituteDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblInstituteDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInstituteDetail.Entity = null;
						previousValue.tblInstituteLogins.Remove(this);
					}
					this._tblInstituteDetail.Entity = value;
					if ((value != null))
					{
						value.tblInstituteLogins.Add(this);
						this._colInstituteId = value.colInstituteId;
					}
					else
					{
						this._colInstituteId = default(int);
					}
					this.SendPropertyChanged("tblInstituteDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInstituteDetails")]
	public partial class tblInstituteDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colInstituteId;
		
		private string _colInstituteName;
		
		private string _colAddress;
		
		private string _colPhone;
		
		private string _colLogoPath;
		
		private string _colPrincipalName;
		
		private string _colPrincipalContact;
		
		private string _colInstituteType;
		
		private string _colState;
		
		private string _colDistrict;
		
		private string _colSecondLineAddress;
		
		private EntitySet<tblInstituteLogin> _tblInstituteLogins;
		
		private EntitySet<tblBranchDetail> _tblBranchDetails;
		
		private EntitySet<tblSubjectDetail> _tblSubjectDetails;
		
		private EntitySet<tblInternalMark> _tblInternalMarks;
		
		private EntitySet<tblAttendanceDetail> _tblAttendanceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    partial void OncolInstituteNameChanging(string value);
    partial void OncolInstituteNameChanged();
    partial void OncolAddressChanging(string value);
    partial void OncolAddressChanged();
    partial void OncolPhoneChanging(string value);
    partial void OncolPhoneChanged();
    partial void OncolLogoPathChanging(string value);
    partial void OncolLogoPathChanged();
    partial void OncolPrincipalNameChanging(string value);
    partial void OncolPrincipalNameChanged();
    partial void OncolPrincipalContactChanging(string value);
    partial void OncolPrincipalContactChanged();
    partial void OncolInstituteTypeChanging(string value);
    partial void OncolInstituteTypeChanged();
    partial void OncolStateChanging(string value);
    partial void OncolStateChanged();
    partial void OncolDistrictChanging(string value);
    partial void OncolDistrictChanged();
    partial void OncolSecondLineAddressChanging(string value);
    partial void OncolSecondLineAddressChanged();
    #endregion
		
		public tblInstituteDetail()
		{
			this._tblInstituteLogins = new EntitySet<tblInstituteLogin>(new Action<tblInstituteLogin>(this.attach_tblInstituteLogins), new Action<tblInstituteLogin>(this.detach_tblInstituteLogins));
			this._tblBranchDetails = new EntitySet<tblBranchDetail>(new Action<tblBranchDetail>(this.attach_tblBranchDetails), new Action<tblBranchDetail>(this.detach_tblBranchDetails));
			this._tblSubjectDetails = new EntitySet<tblSubjectDetail>(new Action<tblSubjectDetail>(this.attach_tblSubjectDetails), new Action<tblSubjectDetail>(this.detach_tblSubjectDetails));
			this._tblInternalMarks = new EntitySet<tblInternalMark>(new Action<tblInternalMark>(this.attach_tblInternalMarks), new Action<tblInternalMark>(this.detach_tblInternalMarks));
			this._tblAttendanceDetails = new EntitySet<tblAttendanceDetail>(new Action<tblAttendanceDetail>(this.attach_tblAttendanceDetails), new Action<tblAttendanceDetail>(this.detach_tblAttendanceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colInstituteName
		{
			get
			{
				return this._colInstituteName;
			}
			set
			{
				if ((this._colInstituteName != value))
				{
					this.OncolInstituteNameChanging(value);
					this.SendPropertyChanging();
					this._colInstituteName = value;
					this.SendPropertyChanged("colInstituteName");
					this.OncolInstituteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string colAddress
		{
			get
			{
				return this._colAddress;
			}
			set
			{
				if ((this._colAddress != value))
				{
					this.OncolAddressChanging(value);
					this.SendPropertyChanging();
					this._colAddress = value;
					this.SendPropertyChanged("colAddress");
					this.OncolAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string colPhone
		{
			get
			{
				return this._colPhone;
			}
			set
			{
				if ((this._colPhone != value))
				{
					this.OncolPhoneChanging(value);
					this.SendPropertyChanging();
					this._colPhone = value;
					this.SendPropertyChanged("colPhone");
					this.OncolPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colLogoPath", DbType="VarChar(50)")]
		public string colLogoPath
		{
			get
			{
				return this._colLogoPath;
			}
			set
			{
				if ((this._colLogoPath != value))
				{
					this.OncolLogoPathChanging(value);
					this.SendPropertyChanging();
					this._colLogoPath = value;
					this.SendPropertyChanged("colLogoPath");
					this.OncolLogoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPrincipalName", DbType="VarChar(50)")]
		public string colPrincipalName
		{
			get
			{
				return this._colPrincipalName;
			}
			set
			{
				if ((this._colPrincipalName != value))
				{
					this.OncolPrincipalNameChanging(value);
					this.SendPropertyChanging();
					this._colPrincipalName = value;
					this.SendPropertyChanged("colPrincipalName");
					this.OncolPrincipalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPrincipalContact", DbType="NVarChar(50)")]
		public string colPrincipalContact
		{
			get
			{
				return this._colPrincipalContact;
			}
			set
			{
				if ((this._colPrincipalContact != value))
				{
					this.OncolPrincipalContactChanging(value);
					this.SendPropertyChanging();
					this._colPrincipalContact = value;
					this.SendPropertyChanged("colPrincipalContact");
					this.OncolPrincipalContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string colInstituteType
		{
			get
			{
				return this._colInstituteType;
			}
			set
			{
				if ((this._colInstituteType != value))
				{
					this.OncolInstituteTypeChanging(value);
					this.SendPropertyChanging();
					this._colInstituteType = value;
					this.SendPropertyChanged("colInstituteType");
					this.OncolInstituteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colState", DbType="VarChar(50)")]
		public string colState
		{
			get
			{
				return this._colState;
			}
			set
			{
				if ((this._colState != value))
				{
					this.OncolStateChanging(value);
					this.SendPropertyChanging();
					this._colState = value;
					this.SendPropertyChanged("colState");
					this.OncolStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colDistrict", DbType="VarChar(50)")]
		public string colDistrict
		{
			get
			{
				return this._colDistrict;
			}
			set
			{
				if ((this._colDistrict != value))
				{
					this.OncolDistrictChanging(value);
					this.SendPropertyChanging();
					this._colDistrict = value;
					this.SendPropertyChanged("colDistrict");
					this.OncolDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSecondLineAddress", DbType="VarChar(MAX)")]
		public string colSecondLineAddress
		{
			get
			{
				return this._colSecondLineAddress;
			}
			set
			{
				if ((this._colSecondLineAddress != value))
				{
					this.OncolSecondLineAddressChanging(value);
					this.SendPropertyChanging();
					this._colSecondLineAddress = value;
					this.SendPropertyChanged("colSecondLineAddress");
					this.OncolSecondLineAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblInstituteLogin", Storage="_tblInstituteLogins", ThisKey="colInstituteId", OtherKey="colInstituteId")]
		public EntitySet<tblInstituteLogin> tblInstituteLogins
		{
			get
			{
				return this._tblInstituteLogins;
			}
			set
			{
				this._tblInstituteLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblBranchDetail", Storage="_tblBranchDetails", ThisKey="colInstituteId", OtherKey="colInstituteId")]
		public EntitySet<tblBranchDetail> tblBranchDetails
		{
			get
			{
				return this._tblBranchDetails;
			}
			set
			{
				this._tblBranchDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblSubjectDetail", Storage="_tblSubjectDetails", ThisKey="colInstituteId", OtherKey="colInstituteId")]
		public EntitySet<tblSubjectDetail> tblSubjectDetails
		{
			get
			{
				return this._tblSubjectDetails;
			}
			set
			{
				this._tblSubjectDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblInternalMark", Storage="_tblInternalMarks", ThisKey="colInstituteId", OtherKey="colInstituteId")]
		public EntitySet<tblInternalMark> tblInternalMarks
		{
			get
			{
				return this._tblInternalMarks;
			}
			set
			{
				this._tblInternalMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblAttendanceDetail", Storage="_tblAttendanceDetails", ThisKey="colInstituteId", OtherKey="colInstituteId")]
		public EntitySet<tblAttendanceDetail> tblAttendanceDetails
		{
			get
			{
				return this._tblAttendanceDetails;
			}
			set
			{
				this._tblAttendanceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblInstituteLogins(tblInstituteLogin entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = this;
		}
		
		private void detach_tblInstituteLogins(tblInstituteLogin entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = null;
		}
		
		private void attach_tblBranchDetails(tblBranchDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = this;
		}
		
		private void detach_tblBranchDetails(tblBranchDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = null;
		}
		
		private void attach_tblSubjectDetails(tblSubjectDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = this;
		}
		
		private void detach_tblSubjectDetails(tblSubjectDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = null;
		}
		
		private void attach_tblInternalMarks(tblInternalMark entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = this;
		}
		
		private void detach_tblInternalMarks(tblInternalMark entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = null;
		}
		
		private void attach_tblAttendanceDetails(tblAttendanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = this;
		}
		
		private void detach_tblAttendanceDetails(tblAttendanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblInstituteDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBranchDetails")]
	public partial class tblBranchDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colBranchId;
		
		private string _colBranchName;
		
		private int _colInstituteId;
		
		private string _colHeadofBranch;
		
		private string _colHeadofBranchContact;
		
		private EntityRef<tblInstituteDetail> _tblInstituteDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolBranchIdChanging(int value);
    partial void OncolBranchIdChanged();
    partial void OncolBranchNameChanging(string value);
    partial void OncolBranchNameChanged();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    partial void OncolHeadofBranchChanging(string value);
    partial void OncolHeadofBranchChanged();
    partial void OncolHeadofBranchContactChanging(string value);
    partial void OncolHeadofBranchContactChanged();
    #endregion
		
		public tblBranchDetail()
		{
			this._tblInstituteDetail = default(EntityRef<tblInstituteDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this.OncolBranchIdChanging(value);
					this.SendPropertyChanging();
					this._colBranchId = value;
					this.SendPropertyChanged("colBranchId");
					this.OncolBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colBranchName
		{
			get
			{
				return this._colBranchName;
			}
			set
			{
				if ((this._colBranchName != value))
				{
					this.OncolBranchNameChanging(value);
					this.SendPropertyChanging();
					this._colBranchName = value;
					this.SendPropertyChanged("colBranchName");
					this.OncolBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					if (this._tblInstituteDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colHeadofBranch", DbType="VarChar(50)")]
		public string colHeadofBranch
		{
			get
			{
				return this._colHeadofBranch;
			}
			set
			{
				if ((this._colHeadofBranch != value))
				{
					this.OncolHeadofBranchChanging(value);
					this.SendPropertyChanging();
					this._colHeadofBranch = value;
					this.SendPropertyChanged("colHeadofBranch");
					this.OncolHeadofBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colHeadofBranchContact", DbType="NVarChar(50)")]
		public string colHeadofBranchContact
		{
			get
			{
				return this._colHeadofBranchContact;
			}
			set
			{
				if ((this._colHeadofBranchContact != value))
				{
					this.OncolHeadofBranchContactChanging(value);
					this.SendPropertyChanging();
					this._colHeadofBranchContact = value;
					this.SendPropertyChanged("colHeadofBranchContact");
					this.OncolHeadofBranchContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblBranchDetail", Storage="_tblInstituteDetail", ThisKey="colInstituteId", OtherKey="colInstituteId", IsForeignKey=true)]
		public tblInstituteDetail tblInstituteDetail
		{
			get
			{
				return this._tblInstituteDetail.Entity;
			}
			set
			{
				tblInstituteDetail previousValue = this._tblInstituteDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblInstituteDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInstituteDetail.Entity = null;
						previousValue.tblBranchDetails.Remove(this);
					}
					this._tblInstituteDetail.Entity = value;
					if ((value != null))
					{
						value.tblBranchDetails.Add(this);
						this._colInstituteId = value.colInstituteId;
					}
					else
					{
						this._colInstituteId = default(int);
					}
					this.SendPropertyChanged("tblInstituteDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSubjectDetails")]
	public partial class tblSubjectDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colSubjectId;
		
		private string _colSemester;
		
		private int _colBranchId;
		
		private string _colSubjectName;
		
		private string _colIsTheory;
		
		private int _colInstituteId;
		
		private EntityRef<tblInstituteDetail> _tblInstituteDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolSubjectIdChanging(int value);
    partial void OncolSubjectIdChanged();
    partial void OncolSemesterChanging(string value);
    partial void OncolSemesterChanged();
    partial void OncolBranchIdChanging(int value);
    partial void OncolBranchIdChanged();
    partial void OncolSubjectNameChanging(string value);
    partial void OncolSubjectNameChanged();
    partial void OncolIsTheoryChanging(string value);
    partial void OncolIsTheoryChanged();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    #endregion
		
		public tblSubjectDetail()
		{
			this._tblInstituteDetail = default(EntityRef<tblInstituteDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSubjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colSubjectId
		{
			get
			{
				return this._colSubjectId;
			}
			set
			{
				if ((this._colSubjectId != value))
				{
					this.OncolSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._colSubjectId = value;
					this.SendPropertyChanged("colSubjectId");
					this.OncolSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemester", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colSemester
		{
			get
			{
				return this._colSemester;
			}
			set
			{
				if ((this._colSemester != value))
				{
					this.OncolSemesterChanging(value);
					this.SendPropertyChanging();
					this._colSemester = value;
					this.SendPropertyChanged("colSemester");
					this.OncolSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int NOT NULL")]
		public int colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this.OncolBranchIdChanging(value);
					this.SendPropertyChanging();
					this._colBranchId = value;
					this.SendPropertyChanged("colBranchId");
					this.OncolBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSubjectName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colSubjectName
		{
			get
			{
				return this._colSubjectName;
			}
			set
			{
				if ((this._colSubjectName != value))
				{
					this.OncolSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._colSubjectName = value;
					this.SendPropertyChanged("colSubjectName");
					this.OncolSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colIsTheory", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string colIsTheory
		{
			get
			{
				return this._colIsTheory;
			}
			set
			{
				if ((this._colIsTheory != value))
				{
					this.OncolIsTheoryChanging(value);
					this.SendPropertyChanging();
					this._colIsTheory = value;
					this.SendPropertyChanged("colIsTheory");
					this.OncolIsTheoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL")]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					if (this._tblInstituteDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblSubjectDetail", Storage="_tblInstituteDetail", ThisKey="colInstituteId", OtherKey="colInstituteId", IsForeignKey=true)]
		public tblInstituteDetail tblInstituteDetail
		{
			get
			{
				return this._tblInstituteDetail.Entity;
			}
			set
			{
				tblInstituteDetail previousValue = this._tblInstituteDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblInstituteDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInstituteDetail.Entity = null;
						previousValue.tblSubjectDetails.Remove(this);
					}
					this._tblInstituteDetail.Entity = value;
					if ((value != null))
					{
						value.tblSubjectDetails.Add(this);
						this._colInstituteId = value.colInstituteId;
					}
					else
					{
						this._colInstituteId = default(int);
					}
					this.SendPropertyChanged("tblInstituteDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudentDetails")]
	public partial class tblStudentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colStudentId;
		
		private string _colStudentName;
		
		private string _colLastName;
		
		private string _colFatherName;
		
		private string _colMotherName;
		
		private System.DateTime _colDOB;
		
		private int _colSemesterId;
		
		private int _colBranchId;
		
		private string _colSection;
		
		private string _colRollNo;
		
		private string _colParentsMobileNo;
		
		private int _colInstituteId;
		
		private string _colAddress;
		
		private EntitySet<tblAttendanceDetail> _tblAttendanceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolStudentIdChanging(int value);
    partial void OncolStudentIdChanged();
    partial void OncolStudentNameChanging(string value);
    partial void OncolStudentNameChanged();
    partial void OncolLastNameChanging(string value);
    partial void OncolLastNameChanged();
    partial void OncolFatherNameChanging(string value);
    partial void OncolFatherNameChanged();
    partial void OncolMotherNameChanging(string value);
    partial void OncolMotherNameChanged();
    partial void OncolDOBChanging(System.DateTime value);
    partial void OncolDOBChanged();
    partial void OncolSemesterIdChanging(int value);
    partial void OncolSemesterIdChanged();
    partial void OncolBranchIdChanging(int value);
    partial void OncolBranchIdChanged();
    partial void OncolSectionChanging(string value);
    partial void OncolSectionChanged();
    partial void OncolRollNoChanging(string value);
    partial void OncolRollNoChanged();
    partial void OncolParentsMobileNoChanging(string value);
    partial void OncolParentsMobileNoChanged();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    partial void OncolAddressChanging(string value);
    partial void OncolAddressChanged();
    #endregion
		
		public tblStudentDetail()
		{
			this._tblAttendanceDetails = new EntitySet<tblAttendanceDetail>(new Action<tblAttendanceDetail>(this.attach_tblAttendanceDetails), new Action<tblAttendanceDetail>(this.detach_tblAttendanceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colStudentId
		{
			get
			{
				return this._colStudentId;
			}
			set
			{
				if ((this._colStudentId != value))
				{
					this.OncolStudentIdChanging(value);
					this.SendPropertyChanging();
					this._colStudentId = value;
					this.SendPropertyChanged("colStudentId");
					this.OncolStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colStudentName
		{
			get
			{
				return this._colStudentName;
			}
			set
			{
				if ((this._colStudentName != value))
				{
					this.OncolStudentNameChanging(value);
					this.SendPropertyChanging();
					this._colStudentName = value;
					this.SendPropertyChanged("colStudentName");
					this.OncolStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colLastName", DbType="VarChar(200)")]
		public string colLastName
		{
			get
			{
				return this._colLastName;
			}
			set
			{
				if ((this._colLastName != value))
				{
					this.OncolLastNameChanging(value);
					this.SendPropertyChanging();
					this._colLastName = value;
					this.SendPropertyChanged("colLastName");
					this.OncolLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colFatherName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colFatherName
		{
			get
			{
				return this._colFatherName;
			}
			set
			{
				if ((this._colFatherName != value))
				{
					this.OncolFatherNameChanging(value);
					this.SendPropertyChanging();
					this._colFatherName = value;
					this.SendPropertyChanged("colFatherName");
					this.OncolFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMotherName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colMotherName
		{
			get
			{
				return this._colMotherName;
			}
			set
			{
				if ((this._colMotherName != value))
				{
					this.OncolMotherNameChanging(value);
					this.SendPropertyChanging();
					this._colMotherName = value;
					this.SendPropertyChanged("colMotherName");
					this.OncolMotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colDOB", DbType="DateTime NOT NULL")]
		public System.DateTime colDOB
		{
			get
			{
				return this._colDOB;
			}
			set
			{
				if ((this._colDOB != value))
				{
					this.OncolDOBChanging(value);
					this.SendPropertyChanging();
					this._colDOB = value;
					this.SendPropertyChanged("colDOB");
					this.OncolDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemesterId", DbType="Int NOT NULL")]
		public int colSemesterId
		{
			get
			{
				return this._colSemesterId;
			}
			set
			{
				if ((this._colSemesterId != value))
				{
					this.OncolSemesterIdChanging(value);
					this.SendPropertyChanging();
					this._colSemesterId = value;
					this.SendPropertyChanged("colSemesterId");
					this.OncolSemesterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int NOT NULL")]
		public int colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this.OncolBranchIdChanging(value);
					this.SendPropertyChanging();
					this._colBranchId = value;
					this.SendPropertyChanged("colBranchId");
					this.OncolBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSection", DbType="VarChar(50)")]
		public string colSection
		{
			get
			{
				return this._colSection;
			}
			set
			{
				if ((this._colSection != value))
				{
					this.OncolSectionChanging(value);
					this.SendPropertyChanging();
					this._colSection = value;
					this.SendPropertyChanged("colSection");
					this.OncolSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colRollNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colRollNo
		{
			get
			{
				return this._colRollNo;
			}
			set
			{
				if ((this._colRollNo != value))
				{
					this.OncolRollNoChanging(value);
					this.SendPropertyChanging();
					this._colRollNo = value;
					this.SendPropertyChanged("colRollNo");
					this.OncolRollNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colParentsMobileNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colParentsMobileNo
		{
			get
			{
				return this._colParentsMobileNo;
			}
			set
			{
				if ((this._colParentsMobileNo != value))
				{
					this.OncolParentsMobileNoChanging(value);
					this.SendPropertyChanging();
					this._colParentsMobileNo = value;
					this.SendPropertyChanged("colParentsMobileNo");
					this.OncolParentsMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL")]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string colAddress
		{
			get
			{
				return this._colAddress;
			}
			set
			{
				if ((this._colAddress != value))
				{
					this.OncolAddressChanging(value);
					this.SendPropertyChanging();
					this._colAddress = value;
					this.SendPropertyChanged("colAddress");
					this.OncolAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudentDetail_tblAttendanceDetail", Storage="_tblAttendanceDetails", ThisKey="colStudentId", OtherKey="colStudentId")]
		public EntitySet<tblAttendanceDetail> tblAttendanceDetails
		{
			get
			{
				return this._tblAttendanceDetails;
			}
			set
			{
				this._tblAttendanceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAttendanceDetails(tblAttendanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblStudentDetail = this;
		}
		
		private void detach_tblAttendanceDetails(tblAttendanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblStudentDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInternalMarks")]
	public partial class tblInternalMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colInternalsEntryId;
		
		private int _colStudentId;
		
		private int _colBranchId;
		
		private string _colSection;
		
		private int _colSemesterId;
		
		private string _colInternals;
		
		private string _colMonth;
		
		private string _colYear;
		
		private int _colInstituteId;
		
		private decimal _colMaxMarks;
		
		private decimal _colMinMarks;
		
		private decimal _colMarksScored;
		
		private EntityRef<tblInstituteDetail> _tblInstituteDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolInternalsEntryIdChanging(int value);
    partial void OncolInternalsEntryIdChanged();
    partial void OncolStudentIdChanging(int value);
    partial void OncolStudentIdChanged();
    partial void OncolBranchIdChanging(int value);
    partial void OncolBranchIdChanged();
    partial void OncolSectionChanging(string value);
    partial void OncolSectionChanged();
    partial void OncolSemesterIdChanging(int value);
    partial void OncolSemesterIdChanged();
    partial void OncolInternalsChanging(string value);
    partial void OncolInternalsChanged();
    partial void OncolMonthChanging(string value);
    partial void OncolMonthChanged();
    partial void OncolYearChanging(string value);
    partial void OncolYearChanged();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    partial void OncolMaxMarksChanging(decimal value);
    partial void OncolMaxMarksChanged();
    partial void OncolMinMarksChanging(decimal value);
    partial void OncolMinMarksChanged();
    partial void OncolMarksScoredChanging(decimal value);
    partial void OncolMarksScoredChanged();
    #endregion
		
		public tblInternalMark()
		{
			this._tblInstituteDetail = default(EntityRef<tblInstituteDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInternalsEntryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colInternalsEntryId
		{
			get
			{
				return this._colInternalsEntryId;
			}
			set
			{
				if ((this._colInternalsEntryId != value))
				{
					this.OncolInternalsEntryIdChanging(value);
					this.SendPropertyChanging();
					this._colInternalsEntryId = value;
					this.SendPropertyChanged("colInternalsEntryId");
					this.OncolInternalsEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentId", DbType="Int NOT NULL")]
		public int colStudentId
		{
			get
			{
				return this._colStudentId;
			}
			set
			{
				if ((this._colStudentId != value))
				{
					this.OncolStudentIdChanging(value);
					this.SendPropertyChanging();
					this._colStudentId = value;
					this.SendPropertyChanged("colStudentId");
					this.OncolStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int NOT NULL")]
		public int colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this.OncolBranchIdChanging(value);
					this.SendPropertyChanging();
					this._colBranchId = value;
					this.SendPropertyChanged("colBranchId");
					this.OncolBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSection", DbType="VarChar(50)")]
		public string colSection
		{
			get
			{
				return this._colSection;
			}
			set
			{
				if ((this._colSection != value))
				{
					this.OncolSectionChanging(value);
					this.SendPropertyChanging();
					this._colSection = value;
					this.SendPropertyChanged("colSection");
					this.OncolSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemesterId", DbType="Int NOT NULL")]
		public int colSemesterId
		{
			get
			{
				return this._colSemesterId;
			}
			set
			{
				if ((this._colSemesterId != value))
				{
					this.OncolSemesterIdChanging(value);
					this.SendPropertyChanging();
					this._colSemesterId = value;
					this.SendPropertyChanged("colSemesterId");
					this.OncolSemesterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInternals", DbType="VarChar(50)")]
		public string colInternals
		{
			get
			{
				return this._colInternals;
			}
			set
			{
				if ((this._colInternals != value))
				{
					this.OncolInternalsChanging(value);
					this.SendPropertyChanging();
					this._colInternals = value;
					this.SendPropertyChanged("colInternals");
					this.OncolInternalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMonth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colMonth
		{
			get
			{
				return this._colMonth;
			}
			set
			{
				if ((this._colMonth != value))
				{
					this.OncolMonthChanging(value);
					this.SendPropertyChanging();
					this._colMonth = value;
					this.SendPropertyChanged("colMonth");
					this.OncolMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colYear", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colYear
		{
			get
			{
				return this._colYear;
			}
			set
			{
				if ((this._colYear != value))
				{
					this.OncolYearChanging(value);
					this.SendPropertyChanging();
					this._colYear = value;
					this.SendPropertyChanged("colYear");
					this.OncolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL")]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					if (this._tblInstituteDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMaxMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal colMaxMarks
		{
			get
			{
				return this._colMaxMarks;
			}
			set
			{
				if ((this._colMaxMarks != value))
				{
					this.OncolMaxMarksChanging(value);
					this.SendPropertyChanging();
					this._colMaxMarks = value;
					this.SendPropertyChanged("colMaxMarks");
					this.OncolMaxMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMinMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal colMinMarks
		{
			get
			{
				return this._colMinMarks;
			}
			set
			{
				if ((this._colMinMarks != value))
				{
					this.OncolMinMarksChanging(value);
					this.SendPropertyChanging();
					this._colMinMarks = value;
					this.SendPropertyChanged("colMinMarks");
					this.OncolMinMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMarksScored", DbType="Decimal(18,2) NOT NULL")]
		public decimal colMarksScored
		{
			get
			{
				return this._colMarksScored;
			}
			set
			{
				if ((this._colMarksScored != value))
				{
					this.OncolMarksScoredChanging(value);
					this.SendPropertyChanging();
					this._colMarksScored = value;
					this.SendPropertyChanged("colMarksScored");
					this.OncolMarksScoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblInternalMark", Storage="_tblInstituteDetail", ThisKey="colInstituteId", OtherKey="colInstituteId", IsForeignKey=true)]
		public tblInstituteDetail tblInstituteDetail
		{
			get
			{
				return this._tblInstituteDetail.Entity;
			}
			set
			{
				tblInstituteDetail previousValue = this._tblInstituteDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblInstituteDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInstituteDetail.Entity = null;
						previousValue.tblInternalMarks.Remove(this);
					}
					this._tblInstituteDetail.Entity = value;
					if ((value != null))
					{
						value.tblInternalMarks.Add(this);
						this._colInstituteId = value.colInstituteId;
					}
					else
					{
						this._colInstituteId = default(int);
					}
					this.SendPropertyChanged("tblInstituteDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAttendanceDetails")]
	public partial class tblAttendanceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colAttendanceEntryId;
		
		private int _colStudentId;
		
		private int _colBranchId;
		
		private int _colSemesterId;
		
		private string _colSection;
		
		private string _colMonth;
		
		private int _colYear;
		
		private int _colInstituteId;
		
		private decimal _colClassesHeldMonth;
		
		private decimal _colClassesAttendedMonth;
		
		private decimal _colClassesAttendedMonthPercent;
		
		private decimal _colAccumulatedClassesHeld;
		
		private decimal _colAccumulatedClassesAttended;
		
		private decimal _colAccumulatedClassesAttendedPercent;
		
		private EntityRef<tblInstituteDetail> _tblInstituteDetail;
		
		private EntityRef<tblStudentDetail> _tblStudentDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolAttendanceEntryIdChanging(int value);
    partial void OncolAttendanceEntryIdChanged();
    partial void OncolStudentIdChanging(int value);
    partial void OncolStudentIdChanged();
    partial void OncolBranchIdChanging(int value);
    partial void OncolBranchIdChanged();
    partial void OncolSemesterIdChanging(int value);
    partial void OncolSemesterIdChanged();
    partial void OncolSectionChanging(string value);
    partial void OncolSectionChanged();
    partial void OncolMonthChanging(string value);
    partial void OncolMonthChanged();
    partial void OncolYearChanging(int value);
    partial void OncolYearChanged();
    partial void OncolInstituteIdChanging(int value);
    partial void OncolInstituteIdChanged();
    partial void OncolClassesHeldMonthChanging(decimal value);
    partial void OncolClassesHeldMonthChanged();
    partial void OncolClassesAttendedMonthChanging(decimal value);
    partial void OncolClassesAttendedMonthChanged();
    partial void OncolClassesAttendedMonthPercentChanging(decimal value);
    partial void OncolClassesAttendedMonthPercentChanged();
    partial void OncolAccumulatedClassesHeldChanging(decimal value);
    partial void OncolAccumulatedClassesHeldChanged();
    partial void OncolAccumulatedClassesAttendedChanging(decimal value);
    partial void OncolAccumulatedClassesAttendedChanged();
    partial void OncolAccumulatedClassesAttendedPercentChanging(decimal value);
    partial void OncolAccumulatedClassesAttendedPercentChanged();
    #endregion
		
		public tblAttendanceDetail()
		{
			this._tblInstituteDetail = default(EntityRef<tblInstituteDetail>);
			this._tblStudentDetail = default(EntityRef<tblStudentDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAttendanceEntryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colAttendanceEntryId
		{
			get
			{
				return this._colAttendanceEntryId;
			}
			set
			{
				if ((this._colAttendanceEntryId != value))
				{
					this.OncolAttendanceEntryIdChanging(value);
					this.SendPropertyChanging();
					this._colAttendanceEntryId = value;
					this.SendPropertyChanged("colAttendanceEntryId");
					this.OncolAttendanceEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentId", DbType="Int NOT NULL")]
		public int colStudentId
		{
			get
			{
				return this._colStudentId;
			}
			set
			{
				if ((this._colStudentId != value))
				{
					if (this._tblStudentDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolStudentIdChanging(value);
					this.SendPropertyChanging();
					this._colStudentId = value;
					this.SendPropertyChanged("colStudentId");
					this.OncolStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int NOT NULL")]
		public int colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this.OncolBranchIdChanging(value);
					this.SendPropertyChanging();
					this._colBranchId = value;
					this.SendPropertyChanged("colBranchId");
					this.OncolBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemesterId", DbType="Int NOT NULL")]
		public int colSemesterId
		{
			get
			{
				return this._colSemesterId;
			}
			set
			{
				if ((this._colSemesterId != value))
				{
					this.OncolSemesterIdChanging(value);
					this.SendPropertyChanging();
					this._colSemesterId = value;
					this.SendPropertyChanged("colSemesterId");
					this.OncolSemesterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSection", DbType="VarChar(50)")]
		public string colSection
		{
			get
			{
				return this._colSection;
			}
			set
			{
				if ((this._colSection != value))
				{
					this.OncolSectionChanging(value);
					this.SendPropertyChanging();
					this._colSection = value;
					this.SendPropertyChanged("colSection");
					this.OncolSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMonth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colMonth
		{
			get
			{
				return this._colMonth;
			}
			set
			{
				if ((this._colMonth != value))
				{
					this.OncolMonthChanging(value);
					this.SendPropertyChanging();
					this._colMonth = value;
					this.SendPropertyChanged("colMonth");
					this.OncolMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colYear", DbType="Int NOT NULL")]
		public int colYear
		{
			get
			{
				return this._colYear;
			}
			set
			{
				if ((this._colYear != value))
				{
					this.OncolYearChanging(value);
					this.SendPropertyChanging();
					this._colYear = value;
					this.SendPropertyChanged("colYear");
					this.OncolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL")]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					if (this._tblInstituteDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolInstituteIdChanging(value);
					this.SendPropertyChanging();
					this._colInstituteId = value;
					this.SendPropertyChanged("colInstituteId");
					this.OncolInstituteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colClassesHeldMonth", DbType="Decimal(18,2) NOT NULL")]
		public decimal colClassesHeldMonth
		{
			get
			{
				return this._colClassesHeldMonth;
			}
			set
			{
				if ((this._colClassesHeldMonth != value))
				{
					this.OncolClassesHeldMonthChanging(value);
					this.SendPropertyChanging();
					this._colClassesHeldMonth = value;
					this.SendPropertyChanged("colClassesHeldMonth");
					this.OncolClassesHeldMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colClassesAttendedMonth", DbType="Decimal(18,2) NOT NULL")]
		public decimal colClassesAttendedMonth
		{
			get
			{
				return this._colClassesAttendedMonth;
			}
			set
			{
				if ((this._colClassesAttendedMonth != value))
				{
					this.OncolClassesAttendedMonthChanging(value);
					this.SendPropertyChanging();
					this._colClassesAttendedMonth = value;
					this.SendPropertyChanged("colClassesAttendedMonth");
					this.OncolClassesAttendedMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colClassesAttendedMonthPercent", DbType="Decimal(18,2) NOT NULL")]
		public decimal colClassesAttendedMonthPercent
		{
			get
			{
				return this._colClassesAttendedMonthPercent;
			}
			set
			{
				if ((this._colClassesAttendedMonthPercent != value))
				{
					this.OncolClassesAttendedMonthPercentChanging(value);
					this.SendPropertyChanging();
					this._colClassesAttendedMonthPercent = value;
					this.SendPropertyChanged("colClassesAttendedMonthPercent");
					this.OncolClassesAttendedMonthPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAccumulatedClassesHeld", DbType="Decimal(18,2) NOT NULL")]
		public decimal colAccumulatedClassesHeld
		{
			get
			{
				return this._colAccumulatedClassesHeld;
			}
			set
			{
				if ((this._colAccumulatedClassesHeld != value))
				{
					this.OncolAccumulatedClassesHeldChanging(value);
					this.SendPropertyChanging();
					this._colAccumulatedClassesHeld = value;
					this.SendPropertyChanged("colAccumulatedClassesHeld");
					this.OncolAccumulatedClassesHeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAccumulatedClassesAttended", DbType="Decimal(18,2) NOT NULL")]
		public decimal colAccumulatedClassesAttended
		{
			get
			{
				return this._colAccumulatedClassesAttended;
			}
			set
			{
				if ((this._colAccumulatedClassesAttended != value))
				{
					this.OncolAccumulatedClassesAttendedChanging(value);
					this.SendPropertyChanging();
					this._colAccumulatedClassesAttended = value;
					this.SendPropertyChanged("colAccumulatedClassesAttended");
					this.OncolAccumulatedClassesAttendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAccumulatedClassesAttendedPercent", DbType="Decimal(18,2) NOT NULL")]
		public decimal colAccumulatedClassesAttendedPercent
		{
			get
			{
				return this._colAccumulatedClassesAttendedPercent;
			}
			set
			{
				if ((this._colAccumulatedClassesAttendedPercent != value))
				{
					this.OncolAccumulatedClassesAttendedPercentChanging(value);
					this.SendPropertyChanging();
					this._colAccumulatedClassesAttendedPercent = value;
					this.SendPropertyChanged("colAccumulatedClassesAttendedPercent");
					this.OncolAccumulatedClassesAttendedPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInstituteDetail_tblAttendanceDetail", Storage="_tblInstituteDetail", ThisKey="colInstituteId", OtherKey="colInstituteId", IsForeignKey=true)]
		public tblInstituteDetail tblInstituteDetail
		{
			get
			{
				return this._tblInstituteDetail.Entity;
			}
			set
			{
				tblInstituteDetail previousValue = this._tblInstituteDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblInstituteDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInstituteDetail.Entity = null;
						previousValue.tblAttendanceDetails.Remove(this);
					}
					this._tblInstituteDetail.Entity = value;
					if ((value != null))
					{
						value.tblAttendanceDetails.Add(this);
						this._colInstituteId = value.colInstituteId;
					}
					else
					{
						this._colInstituteId = default(int);
					}
					this.SendPropertyChanged("tblInstituteDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudentDetail_tblAttendanceDetail", Storage="_tblStudentDetail", ThisKey="colStudentId", OtherKey="colStudentId", IsForeignKey=true)]
		public tblStudentDetail tblStudentDetail
		{
			get
			{
				return this._tblStudentDetail.Entity;
			}
			set
			{
				tblStudentDetail previousValue = this._tblStudentDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblStudentDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStudentDetail.Entity = null;
						previousValue.tblAttendanceDetails.Remove(this);
					}
					this._tblStudentDetail.Entity = value;
					if ((value != null))
					{
						value.tblAttendanceDetails.Add(this);
						this._colStudentId = value.colStudentId;
					}
					else
					{
						this._colStudentId = default(int);
					}
					this.SendPropertyChanged("tblStudentDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetInstituteDetailsResult
	{
		
		private string _colInstitutename;
		
		private string _colAddress;
		
		private string _colPhone;
		
		private string _colLogoPath;
		
		private string _colPrincipalName;
		
		private string _colPrincipalContact;
		
		private string _colInstituteType;
		
		private string _colUsername;
		
		private string _colDistrict;
		
		private string _colState;
		
		public GetInstituteDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstitutename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colInstitutename
		{
			get
			{
				return this._colInstitutename;
			}
			set
			{
				if ((this._colInstitutename != value))
				{
					this._colInstitutename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string colAddress
		{
			get
			{
				return this._colAddress;
			}
			set
			{
				if ((this._colAddress != value))
				{
					this._colAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string colPhone
		{
			get
			{
				return this._colPhone;
			}
			set
			{
				if ((this._colPhone != value))
				{
					this._colPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colLogoPath", DbType="VarChar(50)")]
		public string colLogoPath
		{
			get
			{
				return this._colLogoPath;
			}
			set
			{
				if ((this._colLogoPath != value))
				{
					this._colLogoPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPrincipalName", DbType="VarChar(50)")]
		public string colPrincipalName
		{
			get
			{
				return this._colPrincipalName;
			}
			set
			{
				if ((this._colPrincipalName != value))
				{
					this._colPrincipalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colPrincipalContact", DbType="NVarChar(50)")]
		public string colPrincipalContact
		{
			get
			{
				return this._colPrincipalContact;
			}
			set
			{
				if ((this._colPrincipalContact != value))
				{
					this._colPrincipalContact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string colInstituteType
		{
			get
			{
				return this._colInstituteType;
			}
			set
			{
				if ((this._colInstituteType != value))
				{
					this._colInstituteType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colUsername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colUsername
		{
			get
			{
				return this._colUsername;
			}
			set
			{
				if ((this._colUsername != value))
				{
					this._colUsername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colDistrict", DbType="VarChar(50)")]
		public string colDistrict
		{
			get
			{
				return this._colDistrict;
			}
			set
			{
				if ((this._colDistrict != value))
				{
					this._colDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colState", DbType="VarChar(50)")]
		public string colState
		{
			get
			{
				return this._colState;
			}
			set
			{
				if ((this._colState != value))
				{
					this._colState = value;
				}
			}
		}
	}
	
	public partial class GetStudentDetailsResult
	{
		
		private string _colStudentName;
		
		private string _colLastName;
		
		private string _colFatherName;
		
		private string _colMotherName;
		
		private System.DateTime _colDOB;
		
		private int _colSemesterId;
		
		private int _colBranchId;
		
		private string _colSection;
		
		private string _colRollNo;
		
		private string _colParentsMobileNo;
		
		private int _colInstituteId;
		
		private string _colAddress;
		
		public GetStudentDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colStudentName
		{
			get
			{
				return this._colStudentName;
			}
			set
			{
				if ((this._colStudentName != value))
				{
					this._colStudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colLastName", DbType="VarChar(200)")]
		public string colLastName
		{
			get
			{
				return this._colLastName;
			}
			set
			{
				if ((this._colLastName != value))
				{
					this._colLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colFatherName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colFatherName
		{
			get
			{
				return this._colFatherName;
			}
			set
			{
				if ((this._colFatherName != value))
				{
					this._colFatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMotherName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string colMotherName
		{
			get
			{
				return this._colMotherName;
			}
			set
			{
				if ((this._colMotherName != value))
				{
					this._colMotherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colDOB", DbType="DateTime NOT NULL")]
		public System.DateTime colDOB
		{
			get
			{
				return this._colDOB;
			}
			set
			{
				if ((this._colDOB != value))
				{
					this._colDOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemesterId", DbType="Int NOT NULL")]
		public int colSemesterId
		{
			get
			{
				return this._colSemesterId;
			}
			set
			{
				if ((this._colSemesterId != value))
				{
					this._colSemesterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int NOT NULL")]
		public int colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this._colBranchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSection", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colSection
		{
			get
			{
				return this._colSection;
			}
			set
			{
				if ((this._colSection != value))
				{
					this._colSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colRollNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colRollNo
		{
			get
			{
				return this._colRollNo;
			}
			set
			{
				if ((this._colRollNo != value))
				{
					this._colRollNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colParentsMobileNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colParentsMobileNo
		{
			get
			{
				return this._colParentsMobileNo;
			}
			set
			{
				if ((this._colParentsMobileNo != value))
				{
					this._colParentsMobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInstituteId", DbType="Int NOT NULL")]
		public int colInstituteId
		{
			get
			{
				return this._colInstituteId;
			}
			set
			{
				if ((this._colInstituteId != value))
				{
					this._colInstituteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string colAddress
		{
			get
			{
				return this._colAddress;
			}
			set
			{
				if ((this._colAddress != value))
				{
					this._colAddress = value;
				}
			}
		}
	}
	
	public partial class GetStudentsInternalsDetailsResult
	{
		
		private string _colInternals;
		
		private string _colMonth;
		
		private string _colYear;
		
		private decimal _colMaxMarks;
		
		private decimal _colMinMarks;
		
		private decimal _colMarksScored;
		
		private System.Nullable<int> _colStudentId;
		
		private string _colStudentName;
		
		private System.Nullable<int> _colSemesterId;
		
		private System.Nullable<int> _colBranchId;
		
		private string _colSection;
		
		private string _colRollNo;
		
		public GetStudentsInternalsDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colInternals", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colInternals
		{
			get
			{
				return this._colInternals;
			}
			set
			{
				if ((this._colInternals != value))
				{
					this._colInternals = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMonth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colMonth
		{
			get
			{
				return this._colMonth;
			}
			set
			{
				if ((this._colMonth != value))
				{
					this._colMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colYear", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colYear
		{
			get
			{
				return this._colYear;
			}
			set
			{
				if ((this._colYear != value))
				{
					this._colYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMaxMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal colMaxMarks
		{
			get
			{
				return this._colMaxMarks;
			}
			set
			{
				if ((this._colMaxMarks != value))
				{
					this._colMaxMarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMinMarks", DbType="Decimal(18,2) NOT NULL")]
		public decimal colMinMarks
		{
			get
			{
				return this._colMinMarks;
			}
			set
			{
				if ((this._colMinMarks != value))
				{
					this._colMinMarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMarksScored", DbType="Decimal(18,2) NOT NULL")]
		public decimal colMarksScored
		{
			get
			{
				return this._colMarksScored;
			}
			set
			{
				if ((this._colMarksScored != value))
				{
					this._colMarksScored = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentId", DbType="Int")]
		public System.Nullable<int> colStudentId
		{
			get
			{
				return this._colStudentId;
			}
			set
			{
				if ((this._colStudentId != value))
				{
					this._colStudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentName", DbType="VarChar(200)")]
		public string colStudentName
		{
			get
			{
				return this._colStudentName;
			}
			set
			{
				if ((this._colStudentName != value))
				{
					this._colStudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemesterId", DbType="Int")]
		public System.Nullable<int> colSemesterId
		{
			get
			{
				return this._colSemesterId;
			}
			set
			{
				if ((this._colSemesterId != value))
				{
					this._colSemesterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int")]
		public System.Nullable<int> colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this._colBranchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSection", DbType="VarChar(50)")]
		public string colSection
		{
			get
			{
				return this._colSection;
			}
			set
			{
				if ((this._colSection != value))
				{
					this._colSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colRollNo", DbType="VarChar(50)")]
		public string colRollNo
		{
			get
			{
				return this._colRollNo;
			}
			set
			{
				if ((this._colRollNo != value))
				{
					this._colRollNo = value;
				}
			}
		}
	}
	
	public partial class GetStudentsAttendanceDetailsResult
	{
		
		private string _colMonth;
		
		private int _colYear;
		
		private decimal _colClassesHeldMonth;
		
		private decimal _colClassesAttendedMonth;
		
		private decimal _colClassesAttendedMonthPercent;
		
		private decimal _colAccumulatedClassesHeld;
		
		private decimal _colAccumulatedClassesAttended;
		
		private decimal _colAccumulatedClassesAttendedPercent;
		
		private System.Nullable<int> _colStudentId;
		
		private string _colStudentName;
		
		private System.Nullable<int> _colSemesterId;
		
		private System.Nullable<int> _colBranchId;
		
		private string _colSection;
		
		private string _colRollNo;
		
		public GetStudentsAttendanceDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colMonth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colMonth
		{
			get
			{
				return this._colMonth;
			}
			set
			{
				if ((this._colMonth != value))
				{
					this._colMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colYear", DbType="Int NOT NULL")]
		public int colYear
		{
			get
			{
				return this._colYear;
			}
			set
			{
				if ((this._colYear != value))
				{
					this._colYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colClassesHeldMonth", DbType="Decimal(18,2) NOT NULL")]
		public decimal colClassesHeldMonth
		{
			get
			{
				return this._colClassesHeldMonth;
			}
			set
			{
				if ((this._colClassesHeldMonth != value))
				{
					this._colClassesHeldMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colClassesAttendedMonth", DbType="Decimal(18,2) NOT NULL")]
		public decimal colClassesAttendedMonth
		{
			get
			{
				return this._colClassesAttendedMonth;
			}
			set
			{
				if ((this._colClassesAttendedMonth != value))
				{
					this._colClassesAttendedMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colClassesAttendedMonthPercent", DbType="Decimal(18,2) NOT NULL")]
		public decimal colClassesAttendedMonthPercent
		{
			get
			{
				return this._colClassesAttendedMonthPercent;
			}
			set
			{
				if ((this._colClassesAttendedMonthPercent != value))
				{
					this._colClassesAttendedMonthPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAccumulatedClassesHeld", DbType="Decimal(18,2) NOT NULL")]
		public decimal colAccumulatedClassesHeld
		{
			get
			{
				return this._colAccumulatedClassesHeld;
			}
			set
			{
				if ((this._colAccumulatedClassesHeld != value))
				{
					this._colAccumulatedClassesHeld = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAccumulatedClassesAttended", DbType="Decimal(18,2) NOT NULL")]
		public decimal colAccumulatedClassesAttended
		{
			get
			{
				return this._colAccumulatedClassesAttended;
			}
			set
			{
				if ((this._colAccumulatedClassesAttended != value))
				{
					this._colAccumulatedClassesAttended = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colAccumulatedClassesAttendedPercent", DbType="Decimal(18,2) NOT NULL")]
		public decimal colAccumulatedClassesAttendedPercent
		{
			get
			{
				return this._colAccumulatedClassesAttendedPercent;
			}
			set
			{
				if ((this._colAccumulatedClassesAttendedPercent != value))
				{
					this._colAccumulatedClassesAttendedPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentId", DbType="Int")]
		public System.Nullable<int> colStudentId
		{
			get
			{
				return this._colStudentId;
			}
			set
			{
				if ((this._colStudentId != value))
				{
					this._colStudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colStudentName", DbType="VarChar(200)")]
		public string colStudentName
		{
			get
			{
				return this._colStudentName;
			}
			set
			{
				if ((this._colStudentName != value))
				{
					this._colStudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSemesterId", DbType="Int")]
		public System.Nullable<int> colSemesterId
		{
			get
			{
				return this._colSemesterId;
			}
			set
			{
				if ((this._colSemesterId != value))
				{
					this._colSemesterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colBranchId", DbType="Int")]
		public System.Nullable<int> colBranchId
		{
			get
			{
				return this._colBranchId;
			}
			set
			{
				if ((this._colBranchId != value))
				{
					this._colBranchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colSection", DbType="VarChar(50)")]
		public string colSection
		{
			get
			{
				return this._colSection;
			}
			set
			{
				if ((this._colSection != value))
				{
					this._colSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colRollNo", DbType="VarChar(50)")]
		public string colRollNo
		{
			get
			{
				return this._colRollNo;
			}
			set
			{
				if ((this._colRollNo != value))
				{
					this._colRollNo = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
